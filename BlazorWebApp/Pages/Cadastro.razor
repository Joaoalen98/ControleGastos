@page "/cadastro"

@inject UsuarioApiServico UsuarioApiServico
@inject NavigationManager NavigationManager

<div class="container mt-3">
    <h3>Faça seu cadastro:</h3>

    <hr />

    @if (!string.IsNullOrEmpty(msgErro))
    {
        <div class="alert alert-danger" role="alert">
            @msgErro
        </div>
    }


    <div class="col col-md-4">
        <EditForm Model="model" OnValidSubmit="EnviaCadastro">
            <DataAnnotationsValidator />
            <ValidationSummary Model="model" />

            <div class="form-group">
                <label class="form-label">Nome</label>
                <InputText class="form-control" @bind-Value="model.Nome" placeholder="" />
                <ValidationMessage For="() => model.Nome" />
            </div>
            <div class="form-group">
                <label class="form-label">Email</label>
                <InputText class="form-control" @bind-Value="model.Email" placeholder="email@email.com" />
                <ValidationMessage For="() => model.Email" />
            </div>
            <div class="form-group">
                <label class="form-label">CPF</label>
                <InputText class="form-control" @bind-Value="model.CPF" placeholder="000.000.000-00" />
                <ValidationMessage For="() => model.CPF" />
            </div>
            <div class="form-group mt-3">
                <label class="form-label">Senha</label>
                <InputText class="form-control" @bind-Value="model.Senha" placeholder="*********" />
                <ValidationMessage For="() => model.Senha" />
            </div>
            <div class="mt-3">
                @if (!enviando)
                {
                    <button class="btn btn-primary" type="submit">
                        Cadastrar-se
                    </button>
                }
            </div>

            @if (enviando)
            {
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
            }
        </EditForm>
    </div>
</div>

@code {
    private string msgErro = "";
    private bool enviando = false;

    private NovoUsuarioDTO model = new NovoUsuarioDTO();

    private async void EnviaCadastro()
    {
        enviando = true;

        try
        {
            await UsuarioApiServico.Cadastro(model);
            NavigationManager.NavigateTo("/");
        }
        catch (ServicoException ex)
        {
            msgErro = ex.Data.msg;
        }
        finally
        {
            enviando = false;
            StateHasChanged();
        }
    }
}
