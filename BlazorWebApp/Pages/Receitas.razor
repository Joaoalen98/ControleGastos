@page "/transacoes/receitas"

@inject MovimentacaoApiServico MovimentacaoApiServico

<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Adicionar movimentação</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <EditForm Model="model">
                    <div class="form-group">
                        <label>Valor (R$)</label>
                        <InputNumber class="form-control" @bind-Value="model.Valor" />
                    </div>
                    <div class="form-group">
                        <label>Descrição</label>
                        <InputText class="form-control" @bind-Value="model.Descricao" />
                    </div>
                    <div class="form-group">
                        <label>Data</label>
                        <InputDate class="form-control" @bind-Value="model.DataEntrada" />
                    </div>
                    <div class="form-group">
                        <label>Categoria</label>
                        <select class="form-control" 
                            @onchange="(e) => model.CategoriaReceita = Enum.Parse<CategoriaReceitaEnum>(e.Value.ToString())">
                            @foreach (var categoria in Enum.GetValues<CategoriaReceitaEnum>())
                            {
                                <option value="@categoria">
                                    @categoria
                                </option>
                            }
                        </select>
                    </div>
                    <div class="form-group mt-3">
                        <button class="btn btn-success">
                            Cadastrar
                        </button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                            Cancelar
                        </button>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>

<div class="container mt-3">
    <h3>Receitas</h3>

    @if (movimentacoes == null)
    {
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    }
    else
    {
        <div class="row">
            <div class="card col-md-4">
                <div class="card-header">
                    Recebidos
                    <i class="bi bi-arrow-up-circle-fill text-success"></i>
                </div>
                <div class="card-body">
                    <h5 class="card-title text-succes">R$ 0,00</h5>
                </div>
            </div>
            <div class="card col-md-4">
                <div class="card-header">
                    Pendentes
                    <i class="bi bi-alarm-fill text-success"></i>
                </div>
                <div class="card-body">
                    <h5 class="card-title">R$ 0,00</h5>
                </div>
            </div>
            <div class="card col-md-4">
                <div class="card-header">
                    Total
                    <i class="bi bi-currency-dollar text-success"></i>
                </div>
                <div class="card-body">
                    <h5 class="card-title">R$ 0,00</h5>
                </div>
            </div>
        </div>

        <div class="mt-3 mb-3">
            <button class="btn btn-success" data-bs-toggle="modal" data-bs-target="#exampleModal">
                Nova Receita
            </button>
        </div>

        <table class="table">
            <thead>
                <tr>
                    <th>Data</th>
                    <th>Descrição</th>
                    <th>Categoria</th>
                    <th>Valor</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @if (movimentacoes.Count == 0)
                {
                    <tr>
                        <td colspan="5">Sem movimentações neste período.</td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>

@code {
    private static int mes = DateTime.Now.Month;
    private static int ano = DateTime.Now.Year;
    private DateTime dataIncial = new DateTime(ano, mes, 1);
    private DateTime dataFinal = new DateTime(ano, mes, DateTime.DaysInMonth(ano, mes));
    private List<Movimentacao> movimentacoes;
    private double recebidos = 0.00;
    private double pendentes = 0.00;
    private double total = 0.00;
    private NovaMovimentacaoDTO model = new NovaMovimentacaoDTO();

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        try
        {
            var movs = await MovimentacaoApiServico.ObterMovimentacoes(
                dataIncial, dataFinal, TipoMovimentacaoEnum.RECEITA
            );

            movimentacoes = movs.ToList();

            recebidos = movs.Where(x => x.DataEntrada <= DateTime.Now).Sum(x => x.Valor);
            pendentes = movs.Where(x => x.DataEntrada > DateTime.Now).Sum(x => x.Valor);
            total = movs.Sum(x => x.Valor);

            StateHasChanged();
        }
        catch (System.Exception ex)
        {
            
        }
    }
}

