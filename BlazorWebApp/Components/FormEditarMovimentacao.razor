@inject MovimentacaoApiServico MovimentacaoApiServico

<MudDialog>
    <DialogContent>
        <EditForm Model="Movimentacao" OnValidSubmit="EditaMovimentacao">
            <input type="hidden" @bind-value="Movimentacao.UsuarioId" />
            <input type="hidden" @bind-value="Movimentacao.Id" />

            <div class="form-group">
                <label>Valor (R$)</label>
                <InputNumber class="form-control" @bind-Value="Movimentacao.Valor" />
            </div>
            <div class="form-group">
                <label>Descrição</label>
                <InputText class="form-control" @bind-Value="Movimentacao.Descricao" />
            </div>
            <div class="form-group">
                <label>Data</label>
                <InputDate class="form-control" @bind-Value="Movimentacao.DataEntrada" />
            </div>
            <div class="form-group">
                <label>Categoria</label>
                @if (TipoMovimentacao == TipoMovimentacaoEnum.DESPESA)
                {

                }
                else if (TipoMovimentacao == TipoMovimentacaoEnum.RECEITA)
                {
                    <select class="form-control" @onchange="(e) => Movimentacao.CategoriaReceita = Enum.Parse<CategoriaReceitaEnum>(e.Value.ToString())">
                        @foreach (var categoria in Enum.GetValues<CategoriaReceitaEnum>())
                        {
                            <option selected="@(categoria == Movimentacao.CategoriaReceita)" value="@categoria">
                                @categoria.GetDisplayName()
                            </option>
                        }
                    </select>
                }
            </div>
            <div class="form-group mt-3">
                @if (!EnviandoForm)
                {
                    <button class="btn btn-success">
                        Cadastrar
                    </button>
                }
                else
                {
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                }
            </div>
        </EditForm>
    </DialogContent>
</MudDialog>

@code {
    [Parameter]
    public TipoMovimentacaoEnum TipoMovimentacao { get; set; }

    [Parameter]
    public Movimentacao Movimentacao { get; set; }

    [Parameter]
    public EventCallback<EventArgs> OnClickCallback { get; set; }

    [CascadingParameter] 
    public MudDialogInstance MudDialog { get; set; }

    public bool EnviandoForm { get; set; }


    private async Task EditaMovimentacao()
    {
        EnviandoForm = true;
        try
        {
            await MovimentacaoApiServico.Editar(Movimentacao);
            await OnClickCallback.InvokeAsync();
            MudDialog.Close();
        }
        catch (ServicoException ex)
        {
            Console.WriteLine(ex.Data);
        }
        finally
        {
            EnviandoForm = false;
        }
    }

}
